/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { CertificationUpdateManyWithoutVendorsInput } from "./CertificationUpdateManyWithoutVendorsInput";
import { Type } from "class-transformer";
import { ExpenseUpdateManyWithoutVendorsInput } from "./ExpenseUpdateManyWithoutVendorsInput";
import { EnumVendorProduct } from "./EnumVendorProduct";

@InputType()
class VendorUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  address?: string | null;

  @ApiProperty({
    required: false,
    type: () => CertificationUpdateManyWithoutVendorsInput,
  })
  @ValidateNested()
  @Type(() => CertificationUpdateManyWithoutVendorsInput)
  @IsOptional()
  @Field(() => CertificationUpdateManyWithoutVendorsInput, {
    nullable: true,
  })
  certifications?: CertificationUpdateManyWithoutVendorsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  city?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contactEmail?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contactFirstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contactLastName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contactPhone?: string | null;

  @ApiProperty({
    required: false,
    type: () => ExpenseUpdateManyWithoutVendorsInput,
  })
  @ValidateNested()
  @Type(() => ExpenseUpdateManyWithoutVendorsInput)
  @IsOptional()
  @Field(() => ExpenseUpdateManyWithoutVendorsInput, {
    nullable: true,
  })
  expenses?: ExpenseUpdateManyWithoutVendorsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  notes?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumVendorProduct,
    isArray: true,
  })
  @IsEnum(EnumVendorProduct, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumVendorProduct], {
    nullable: true,
  })
  product?: Array<"Epb" | "Vs" | "Service" | "Other">;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  state?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  zip?: string | null;
}

export { VendorUpdateInput as VendorUpdateInput };
