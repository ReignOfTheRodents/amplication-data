/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CertificationWhereUniqueInput } from "../../certification/base/CertificationWhereUniqueInput";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { DateTimeFilter } from "../../util/DateTimeFilter";
import { ExpenseWhereUniqueInput } from "../../expense/base/ExpenseWhereUniqueInput";
import { StringFilter } from "../../util/StringFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { EnumContractTypeField } from "./EnumContractTypeField";

@InputType()
class ContractWhereInput {
  @ApiProperty({
    required: false,
    type: () => CertificationWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CertificationWhereUniqueInput)
  @IsOptional()
  @Field(() => CertificationWhereUniqueInput, {
    nullable: true,
  })
  certification?: CertificationWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  endDate?: DateTimeFilter;

  @ApiProperty({
    required: false,
    type: () => ExpenseWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ExpenseWhereUniqueInput)
  @IsOptional()
  @Field(() => ExpenseWhereUniqueInput, {
    nullable: true,
  })
  expense?: ExpenseWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  notes?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeFilter,
  })
  @Type(() => DateTimeFilter)
  @IsOptional()
  @Field(() => DateTimeFilter, {
    nullable: true,
  })
  startDate?: DateTimeFilter;

  @ApiProperty({
    required: false,
    enum: EnumContractTypeField,
  })
  @IsEnum(EnumContractTypeField)
  @IsOptional()
  @Field(() => EnumContractTypeField, {
    nullable: true,
  })
  typeField?: "Purchase" | "Lease" | "Service" | "Other";
}

export { ContractWhereInput as ContractWhereInput };
