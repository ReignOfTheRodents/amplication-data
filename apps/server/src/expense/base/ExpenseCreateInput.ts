/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  Max,
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Decimal } from "decimal.js";
import { ContractWhereUniqueInput } from "../../contract/base/ContractWhereUniqueInput";
import { Type } from "class-transformer";
import { CountyWhereUniqueInput } from "../../county/base/CountyWhereUniqueInput";
import { InventoryUnitCreateNestedManyWithoutExpensesInput } from "./InventoryUnitCreateNestedManyWithoutExpensesInput";
import { VendorWhereUniqueInput } from "../../vendor/base/VendorWhereUniqueInput";

@InputType()
class ExpenseCreateInput {
  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @Field(() => Float)
  amount!: Decimal;

  @ApiProperty({
    required: false,
    type: () => ContractWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ContractWhereUniqueInput)
  @IsOptional()
  @Field(() => ContractWhereUniqueInput, {
    nullable: true,
  })
  contract?: ContractWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => CountyWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CountyWhereUniqueInput)
  @IsOptional()
  @Field(() => CountyWhereUniqueInput, {
    nullable: true,
  })
  county?: CountyWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  fund!: string;

  @ApiProperty({
    required: false,
    type: () => InventoryUnitCreateNestedManyWithoutExpensesInput,
  })
  @ValidateNested()
  @Type(() => InventoryUnitCreateNestedManyWithoutExpensesInput)
  @IsOptional()
  @Field(() => InventoryUnitCreateNestedManyWithoutExpensesInput, {
    nullable: true,
  })
  inventoryUnits?: InventoryUnitCreateNestedManyWithoutExpensesInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  notes?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  owner!: string;

  @ApiProperty({
    required: false,
    type: () => VendorWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VendorWhereUniqueInput)
  @IsOptional()
  @Field(() => VendorWhereUniqueInput, {
    nullable: true,
  })
  vendor?: VendorWhereUniqueInput | null;
}

export { ExpenseCreateInput as ExpenseCreateInput };
