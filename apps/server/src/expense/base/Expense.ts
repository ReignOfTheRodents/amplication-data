/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field, Float } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsNumber,
  Max,
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Decimal } from "decimal.js";
import { Contract } from "../../contract/base/Contract";
import { Type } from "class-transformer";
import { County } from "../../county/base/County";
import { InventoryUnit } from "../../inventoryUnit/base/InventoryUnit";
import { Vendor } from "../../vendor/base/Vendor";

@ObjectType()
class Expense {
  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsNumber()
  @Max(99999999999)
  @Field(() => Float)
  amount!: Decimal;

  @ApiProperty({
    required: false,
    type: () => Contract,
  })
  @ValidateNested()
  @Type(() => Contract)
  @IsOptional()
  contract?: Contract | null;

  @ApiProperty({
    required: false,
    type: () => County,
  })
  @ValidateNested()
  @Type(() => County)
  @IsOptional()
  county?: County | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  fund!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => [InventoryUnit],
  })
  @ValidateNested()
  @Type(() => InventoryUnit)
  @IsOptional()
  inventoryUnits?: Array<InventoryUnit>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  name!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  notes!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  owner!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => Vendor,
  })
  @ValidateNested()
  @Type(() => Vendor)
  @IsOptional()
  vendor?: Vendor | null;
}

export { Expense as Expense };
