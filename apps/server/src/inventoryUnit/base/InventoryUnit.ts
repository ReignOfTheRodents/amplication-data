/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  ValidateNested,
  IsOptional,
  IsEnum,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { Component } from "../../component/base/Component";
import { EnumInventoryUnitCondition } from "./EnumInventoryUnitCondition";
import { Disposition } from "../../disposition/base/Disposition";
import { Expense } from "../../expense/base/Expense";
import { StorageLocation } from "../../storageLocation/base/StorageLocation";
import { EnumInventoryUnitUse } from "./EnumInventoryUnitUse";

@ObjectType()
class InventoryUnit {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  acquisitionDate!: Date;

  @ApiProperty({
    required: false,
    type: () => Component,
  })
  @ValidateNested()
  @Type(() => Component)
  @IsOptional()
  component?: Component | null;

  @ApiProperty({
    required: true,
    enum: EnumInventoryUnitCondition,
  })
  @IsEnum(EnumInventoryUnitCondition)
  @Field(() => EnumInventoryUnitCondition, {
    nullable: true,
  })
  condition?: "New" | "Excellent" | "Good" | "Worn" | "Damaged" | "Unusable";

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => Disposition,
  })
  @ValidateNested()
  @Type(() => Disposition)
  @IsOptional()
  disposition?: Disposition | null;

  @ApiProperty({
    required: false,
    type: () => Expense,
  })
  @ValidateNested()
  @Type(() => Expense)
  @IsOptional()
  expense?: Expense | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  notes!: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @Field(() => String)
  serialNumber!: string;

  @ApiProperty({
    required: false,
    type: () => StorageLocation,
  })
  @ValidateNested()
  @Type(() => StorageLocation)
  @IsOptional()
  storageLocation?: StorageLocation | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: true,
    enum: EnumInventoryUnitUse,
  })
  @IsEnum(EnumInventoryUnitUse)
  @Field(() => EnumInventoryUnitUse, {
    nullable: true,
  })
  use?: "Active" | "Spare" | "Display" | "Other" | "Inactive";
}

export { InventoryUnit as InventoryUnit };
